<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:jms="http://www.springframework.org/schema/jms"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		        http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.2.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
    <!-- 启动触发器的配置开始 -->
    <bean name="startQuertz" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="branchBusinessTigger" />
            </list>
        </property>
    </bean>
    <!-- 启动触发器的配置结束 -->
    <!-- 每天定时任务上传营业数据   开始 -->
    <!-- 上传营业数据 -->
    <bean id="branchBusinessTigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="branchBusinessJobDetail" />
        </property>
        <property name="cronExpression">
            <!--每天晚上执行  -->
            <!--  <value>0 0 0 * * ?</value>-->
            <value>0 43 17 ? * *</value>
        </property>
    </bean>
    <!-- 调度的配置结束 -->
    <!-- job的配置开始 -->
    <bean id="branchBusinessJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="branchBusinessJob" />
        </property>
        <property name="targetMethod">
            <value>uploadBusinessData</value>
        </property>
    </bean>
    <!-- job的配置结束 -->
    <!-- 工作的bean -->
    <bean id="branchBusinessJob" class="com.candao.www.bossapp.quartz.BranchBusinessJob" />
    <!-- 每天定时任务上传营业数据   结束 -->
    
    <!-- JMS 服务器信息 -->
	<bean id="bossappjmsFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="${mq_url}" />
				<property name="useAsyncSend" value="true" />
			</bean>
		</property>
	</bean>

	<!-- Spring JMS Template -->
	<bean id="bossappJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="bossappjmsFactory"/>
		<property name="pubSubDomain" value="false" />
		<property name="receiveTimeout" value="10000" />
		<property name="deliveryMode" value="1" /> <!-- 发送模式  DeliveryMode.NON_PERSISTENT=1:非持久 ; DeliveryMode.PERSISTENT=2:持久-->
	</bean>
	<!-- 当天营业数据队列 branchBusinessDay -->
	<bean id="branchBusiness" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="branchBusiness" />
	</bean>
     <!-- 流水上传 -->
	<bean id="branchflow" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="branchflow" />
	</bean>
	<!-- 订单信息上传 branchOrder-->
	<bean id="branchOrder" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="branchOrder" />
	</bean>
	<!-- 订单信息上传 branchOrder清台操作-->
	<bean id="branchOrderClear" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="branchOrderClear" />
	</bean>
	<!-- 门店所有桌子信息 branchTables-->
	<bean id="branchTables" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="branchTables" />
	</bean>
	<!-- 门店服务信息上传 branchService-->
	<bean id="branchService" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="branchService" />
	</bean>
</beans>