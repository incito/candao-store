<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">

	<description>Spring公共配置</description>
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="messageConverter" ref="commMessageConverter" />
        <property name="explicitQosEnabled" value="true" /> <!-- deliveryMode, priority, timeToLive 的开关，要生效，必须配置为true，默认false-->
        <property name="deliveryMode" value="2" /> <!-- 发送模式  DeliveryMode.NON_PERSISTENT=1:非持久 ; DeliveryMode.PERSISTENT=2:持久-->
         <property name="sessionAcknowledgeMode" value="1" />
    </bean>

    <!-- 分店 内负责打印单据 的 配置-->
<!--     <bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">   -->
<!--         <property name="brokerURL" value="tcp://localhost:61616"/>   -->
<!--     </bean>   -->


    <!--  分店内部使用 的连接 -->
    <bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
        <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
        <property name="targetConnectionFactory" ref="targetConnectionFactory"/>
    </bean>

     <bean id="redeliveryPolicybranch" class="org.apache.activemq.RedeliveryPolicy">
		<property name="initialRedeliveryDelay" value="15000" />
		<property name="maximumRedeliveries" value="-1" />
		<property name="useExponentialBackOff" value="true" />
		<property name="backOffMultiplier" value="2" />
		<property name="queue" value="*" />
		<property name="topic" value="*" />
	 </bean>

<!--  org.springframework.jms.connection.CachingConnectionFactory -->
    <bean id="targetConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
        init-method="start" destroy-method="stop"  >
        <property name="connectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL" value="failover://(tcp://localhost:61616)?initialReconnectDelay=100" />
                   <property name="redeliveryPolicy" ref="redeliveryPolicybranch"/>
            </bean>
        </property>
        <property name="maxConnections" value="30" />
        <property name="idleTimeout" value="0"/>

    </bean>

	  <!-- 接收分店数据的队列 -->
    <bean id="branchDataQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="branchDataQueue" />
    </bean>

    <!--  - 配置总店mq 信息  -->

    <!--         负责总店数据下发的mq   -->
      <bean id="jmsTemplateCenter" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="centerConnectionFactory"/>
        <property name="messageConverter" ref="commMessageConverter" />
        <property name="explicitQosEnabled" value="true" /> <!-- deliveryMode, priority, timeToLive 的开关，要生效，必须配置为true，默认false-->
        <property name="deliveryMode" value="2" /> <!-- 发送模式  DeliveryMode.NON_PERSISTENT=1:非持久 ; DeliveryMode.PERSISTENT=2:持久-->
         <property name="sessionAcknowledgeMode" value="1" />
          <property name="timeToLive" value="1000000"/>
        <property name="receiveTimeout" value="60000" />
    </bean>

  <bean id="redeliveryPolicy" class="org.apache.activemq.RedeliveryPolicy">
    <property name="backOffMultiplier" value="2" />
    <property name="initialRedeliveryDelay" value="2000" />
    <property name="maximumRedeliveries" value="6" />
    <property name="queue" value="*" />
    	<property name="topic" value="*" />
    <property name="redeliveryDelay" value="15000" />
    <property name="useExponentialBackOff" value="true" />
  </bean>

    <bean id="centerTargetConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
        destroy-method="stop">
        <property name="connectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                 <property name="brokerURL" value="${mq_url}"/>
                 <property name="redeliveryPolicy" ref="redeliveryPolicy"/>

            </bean>
        </property>
        <property name="idleTimeout" value="0"/>
    </bean>

    <bean id="centerConnectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
        <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
        <property name="targetConnectionFactory" ref="centerTargetConnectionFactory"/>
        <property name="reconnectOnException" value="true"/>

    </bean>

<!--         	  发送数据到分店数据的队列   -->
    <bean id="branchDataTopic" name="branchDataTopic" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg value="branchDataTopic_${tenant_id}" />
    </bean>

    <bean id="centerQueue" name="centerQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="centerQueue" />
    </bean>

         <!--  总店发送给分店数据的 监听 -->
     <bean id="branchTopicListenerAdapterContainer"
        class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="centerConnectionFactory" />
        <property name="destination" ref="branchDataTopic" />
        <property name="messageListener" ref="branchTopicListenerAdapter" />
    </bean>

     <bean id="branchTopicListenerAdapter" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
        <property name="delegate">
            <bean class="com.candao.www.interceptor.BranchReceiveDataListener"/>
        </property>
        <property name="defaultListenerMethod" value="receiveMessage"/>
    </bean>
    <!--  总店发送给分店数据的 监听  end -->

    <!--分店监听模板创建模板类-->
    <bean id="messageListener" class="com.candao.www.printer.listener.DefaultMessageListenerContainerAdapter" scope="prototype">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="concurrentConsumers" value="1" />
        <property name="sessionTransacted" value="true" />
        <property name="transactionTimeout" value="300"/>
        <property name="destinationName" value="dst"/>
        <property name="messageListener" ref="ipQueueListenerAdapter"/>
    </bean>

    <bean id="printerListenerManager" class="com.candao.www.printer.listener.PrinterListenerManager">
        <property name="messageListeners" value="messageListener"/>
    </bean>

    <bean id="ipQueueListenerAdapter" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
        <property name="delegate" ref="IPQueueListener"/>
        <property name="defaultListenerMethod" value="receiveMessage"/>
    </bean>

    <bean id="IPQueueListener" class="com.candao.print.listener.IPQueueListener"/>

</beans>