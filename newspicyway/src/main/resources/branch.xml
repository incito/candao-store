<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">

	<description>Spring公共配置</description>
	<!-- <aop:aspectj-autoproxy /> -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
       <list>
          <value>classpath:/jdbc.properties</value>
          <value>classpath:/config.properties</value>
        </list>
    </property>
 </bean>

	<util:properties id="appconfig" location="classpath:/config.properties" />
	
<!-- 	<util:properties id="templateconfig" location="classpath:velocity.properties" /> -->

	<!-- enable autowire -->
	<context:annotation-config />

	<context:spring-configured />

	<!-- Enable transaction demarcation with annotations -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

    <context:component-scan base-package="com.candao.www">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	 <context:component-scan base-package="com.candao.common.utils"/>
	  <context:component-scan base-package="com.candao.print"/>
	 <context:component-scan base-package="com.candao.www"/>
	 <context:component-scan base-package="com.candao.file"/>
	 
	 <bean id="propertiesUtils" class="com.candao.common.utils.PropertiesUtils"></bean>
	 
	<mvc:annotation-driven />

	<!-- 写 DataSource -->
	<bean id="masterDataSource" class ="org.apache.commons.dbcp.BasicDataSource" >
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${master.jdbc.url}" />
		<property name="username" value="${master.jdbc.username}" />
		<property name="password" value="${master.jdbc.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
	</bean>
	
 
	<bean id="dataSource" class="com.candao.common.interceptor.DynamicDataSource">
        <property name="targetDataSources">
            <map></map>
        </property>
        <property name="defaultTargetDataSource" ref="masterDataSource" />
    </bean>
	

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:com/candao/**/mapper/*.xml" />
		<property name="typeAliasesPackage" value="com.candao.www.data.model" />
		<property name="typeAliases"
			value="org.springframework.util.LinkedCaseInsensitiveMap" />
		<property name="configLocation" value="classpath:/mybatis-config.xml" />
		<property name="plugins">
			<array>
				<ref bean="paginationInterceptor" />
			    <ref bean="mybatisInterceptor" />
			</array>
		</property>
	</bean>

 <bean id="mybatisInterceptor" class="com.candao.www.interceptor.MybatisInterceptor" />
	
	<bean id="paginationInterceptor"
		class="com.github.miemiedev.mybatis.paginator.OffsetLimitInterceptor">
		<property name="properties">
			<props>
				<prop key="dialectClass">com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect
				</prop>
			</props>
		</property>
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean class="com.candao.common.dao.SqlSessionDaoSupport">
		<constructor-arg index="0" ref="sqlSessionTemplate" />
	</bean>

	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<aop:config>
		<aop:pointcut id="productServiceMethods"
			expression="execution(* com.candao.www.*.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="productServiceMethods" />
	</aop:config>


<tx:advice id="txAdvice" transaction-manager="transactionManager">  
	 <tx:attributes>  
        <tx:method name="save*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />  
         
        <tx:method name="add*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />  
        <tx:method name="create*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />  
        <tx:method name="insert*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />  
        <tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />  
        <tx:method name="merge*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />  
        <tx:method name="del*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />  
        <tx:method name="remove*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />  
          
        <tx:method name="put*" read-only="true"/>  
        <tx:method name="query*" read-only="true"/>  
        <tx:method name="page*"  read-only="true" />
        <tx:method name="use*" read-only="true"/>  
        <tx:method name="get*" read-only="true"/>  
        <tx:method name="count*" read-only="true" />  
        <tx:method name="find*" read-only="true" />  
        <tx:method name="list*" read-only="true" />  
          
    </tx:attributes>  
</tx:advice>
 
	<!-- MultipartResolver for parsing file uploads, implementation for Commons 
		FileUpload -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="104857600" />
		<property name="maxInMemorySize" value="4096" />
	</bean>

	<bean class="org.springframework.web.client.RestTemplate" />

	<bean class="com.candao.www.spring.SpringContext" />

      <bean id="branchDataJob"  
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
		<property name="targetObject">  
		    <bean class="com.candao.www.timedtask.BranchDataSyn" />  
		</property>  
		<property name="targetMethod" value="reSynData" />  
		<property name="concurrent" value="false" />
	 </bean> 
	 
     <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
	    <property name="jobDetail" ref="branchDataJob" />  
	    <!-- 晚上 1点到 9点 每半小时执行一次  -->
	    <property name="cronExpression" value="* 30 1-9 * * ?" />  
    </bean>  
    
   <bean id="dataSynJob"  
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
		<property name="targetObject">  
		    <bean class="com.candao.www.timedtask.SqlDataSyn" />  
		</property>  
		<property name="targetMethod" value="sqlDataSyn" />  
		<property name="concurrent" value="false" />
	 </bean> 
	 
     <bean id="sqlCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
	    <property name="jobDetail" ref="dataSynJob" />  
	    <!-- sql每半小时执行一次  Seconds Minutes Hours DayofMonth Month DayofWeek Year或  -->
	    <property name="cronExpression" value="50 * * * * ?" />  
    </bean>  
    
     <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
	    <property name="triggers">  
	      <list>  
	      <ref bean="cronTrigger" />  
	      <ref bean="sqlCronTrigger" />  
	      </list>  
	    </property>  
    </bean>  
 
     <!-- 导入bossapp 配置信息
	<import resource="bossapp.xml"/>-->
</beans>