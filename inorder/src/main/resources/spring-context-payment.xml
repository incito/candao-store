<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<!-- 基础配置，引用配置 -->
	<bean id="inorderPropertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:/jdbc.properties</value>
				<value>classpath*:/Inorderconfig.properties</value>
			</list>
		</property>
	</bean>

	<!-- posserver 数据配置 -->
	<bean id="inorderPoserverData" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${posServer.url}" />
		<property name="username" value="${posServer.username}" />
		<property name="password" value="${posServer.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
	</bean>

	<!-- inorder 数据配置 -->
	<bean id="inorderSourceData" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${inorder.url}" />
		<property name="username" value="${inorder.username}" />
		<property name="password" value="${inorder.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
	</bean>
	<!-- 多数据源融合 -->
	<bean id="inoderDynamicDataSource" class="com.candao.inorder.lzrabbit.MultipleDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="dataInorderSource" value-ref="inorderSourceData"></entry>
				<entry key="dataPosServerSource" value-ref="inorderPoserverData"></entry>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="inorderSourceData"></property>
	</bean>

	<!-- 多数据源访问 -->
	<!-- 定义Mybatis的SqlSessionFactory -->
	<bean id="inorderSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 定义数据源 -->
		<property name="dataSource" ref="inoderDynamicDataSource" />
		<!-- 指定mybatis全局配置文件 -->
		<property name="configLocation" value="classpath:/mybatis-config.xml"></property>

		<!-- 扫描mappers目录以及子目录下的所有xml文件 -->
		<property name="mapperLocations" value="classpath*:com/candao/inorder/**/mapper/*.xml" />
		<!-- 别名扫描包 -->
		<property name="typeAliasesPackage" value="com.candao.inorder.pojo" />
	</bean>
	
	<bean id="inorderSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg index="0" ref="inorderSqlSessionFactory" />
	</bean>

	<bean class="com.candao.common.dao.SqlSessionDaoSupport">
		<constructor-arg index="0" ref="inorderSqlSessionTemplate" />
	</bean>
	
	<context:component-scan base-package="com.candao.inorder" />

	<!-- 定义切入点 -->
	<aop:config>
		<!--pointcut元素定义一个切入点，execution中的第一个星号 用以匹配方法的返回类型， 这里星号表明匹配所有返回类型。 com.abc.dao.*.*(..)表明匹配com.simple.mybatis.service包下的所有类的所有 
			方法 -->
		<aop:pointcut id="inorderMyPointcut"
			expression="execution(* com.candao.inorder.service.*.*(..))" />
		<!--将定义好的事务处理策略应用到上述的切入点 -->
		<aop:advisor advice-ref="inorderTxAdvice" pointcut-ref="inorderMyPointcut" />
	</aop:config>

	<tx:annotation-driven transaction-manager="inorderTransactionManager"
		proxy-target-class="true" />
	<!-- 事务配置 -->

	<bean id="inorderTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="inoderDynamicDataSource" />
	</bean>

	<!-- 定义事务策略 -->
	<tx:advice id="inorderTxAdvice" transaction-manager="inorderTransactionManager">
		<tx:attributes>
			<!--所有以query开头的方法都是只读的 -->
			<tx:method name="query*" read-only="true" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" /> 
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />  
			<!--其他方法使用默认事务策略 -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

</beans>	
